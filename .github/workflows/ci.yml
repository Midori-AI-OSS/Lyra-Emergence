name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  json-lint:
    name: JSON Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Validate JSON files in data directory
      run: |
        set -o pipefail
        PYTHONPATH=. uv run python scripts/validate_json.py data/ | tee json.log

    - name: Append JSON validation summary
      run: |
        echo '### JSON Validation Summary' >> "$GITHUB_STEP_SUMMARY"
        cat json.log >> "$GITHUB_STEP_SUMMARY"

  python-lint-and-test:
    name: Python Linting and Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Sync dependencies
      run: uv sync
    
    - name: Install development dependencies
      run: |
        uv add --dev ruff black isort mypy
    
    - name: Run ruff linting
      run: |
        set -o pipefail
        uv run ruff check . --fix | tee ruff.log

    - name: Append ruff lint summary
      run: |
        echo '### Ruff Lint Summary' >> "$GITHUB_STEP_SUMMARY"
        cat ruff.log >> "$GITHUB_STEP_SUMMARY"

    - name: Run black formatting check
      run: |
        set -o pipefail
        uv run black --check . | tee black.log

    - name: Append black formatting summary
      run: |
        echo '### Black Formatting Summary' >> "$GITHUB_STEP_SUMMARY"
        cat black.log >> "$GITHUB_STEP_SUMMARY"

    - name: Run isort import sorting check
      run: |
        set -o pipefail
        uv run isort --check-only . | tee isort.log

    - name: Append isort summary
      run: |
        echo '### isort Summary' >> "$GITHUB_STEP_SUMMARY"
        cat isort.log >> "$GITHUB_STEP_SUMMARY"

    - name: Run mypy type checking
      run: |
        set -o pipefail
        uv run mypy src/ --ignore-missing-imports | tee mypy.log

    - name: Append mypy summary
      run: |
        echo '### MyPy Type Check Summary' >> "$GITHUB_STEP_SUMMARY"
        cat mypy.log >> "$GITHUB_STEP_SUMMARY"
    
    - name: Run tests with pytest
      run: |
        set -o pipefail
        uv run pytest -v 2>&1 | tee pytest.log
      env:
        # Set environment variables for offline testing
        TRANSFORMERS_OFFLINE: 1
        HF_HUB_OFFLINE: 1
    - name: Publish test summary
      if: always()
      run: |
        echo '### Pytest Summary' >> $GITHUB_STEP_SUMMARY
        tail -n 50 pytest.log >> $GITHUB_STEP_SUMMARY
